kind: Service
apiVersion: v1
metadata:
  name: monitoring-nginx-default-backend
  namespace: nginx-ingress
  labels:
    k8s-addon: ingress-nginx.addons.k8s.io
spec:
  ports:
  - port: 80
    targetPort: http
  selector:
    app: monitoring-nginx-default-backend
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: monitoring-nginx-default-backend
  namespace: nginx-ingress
  labels:
    k8s-addon: ingress-nginx.addons.k8s.io
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-addon: ingress-nginx.addons.k8s.io
        app: monitoring-nginx-default-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: monitoring-nginx-default--backend
        image: gcr.io/google_containers/defaultbackend:1.3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: monitoring-ingress-nginx
  namespace: nginx-ingress
  labels:
    k8s-addon: ingress-nginx.addons.k8s.io
data:
  use-proxy-protocol: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: monitoring-ingress-nginx
  namespace: nginx-ingress
  labels:
    k8s-addon: ingress-nginx.addons.k8s.io
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-west-2:107488072721:certificate/680858fa-04d5-4a51-b16c-4c6f89270cd0"
spec:
  type: LoadBalancer
  #loadBalancerSourceRanges:
  #- 8.8.8.8
  #- 8.8.4.4
  selector:
    app: monitoring-ingress-nginx
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: http
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: monitoring-ingress-nginx
  namespace: nginx-ingress
  labels:
    k8s-addon: ingress-nginx.addons.k8s.io
  annotations:
    prometheus.io/port: '10254'
    prometheus.io/scrape: 'true'
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: monitoring-ingress-nginx
        k8s-addon: ingress-nginx.addons.k8s.io
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - image: gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.13
        name: monitoring-ingress-nginx
        imagePullPolicy: Always
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
          - name: https
            containerPort: 443
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        args:
        - /monitoring-nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/monitoring-nginx-default-backend
        - --configmap=$(POD_NAMESPACE)/monitoring-ingress-nginx
        - --publish-service=$(POD_NAMESPACE)/monitoring-ingress-nginx
